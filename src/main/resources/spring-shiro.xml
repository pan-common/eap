<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util.xsd">

	<description>shiro配置文件</description>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroDbRealm"></property>
		<!--将缓存管理器，交给安全管理器 -->
		<property name="cacheManager" ref="shiroEhcacheManager" />
		<!-- 记住密码管理 -->
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>
	<!-- 记住密码Cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe"></constructor-arg>
		<property name="httpOnly" value="false"></property>
		<property name="maxAge" value="#{7 * 24 * 60 * 60}" />
	</bean>
	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey"
			value="#{T(org.apache.shiro.codec.Base64).decode('5aaC5qKm5oqA5pyvAAAAAA==')}" />
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- 后台管理系统过滤器 -->
	<bean id="systemFilter"
		class="com.taiji.eap.common.shiro.filter.SystemAuthenticationFilter">
		<property name="loginUrl" value="/system/login/login" />
		<property name="successUrl" value="/system/home/home" />
	</bean>

	<bean id="shiroDbRealm" class="com.taiji.eap.common.shiro.realm.ShiroDbRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
		<property name="cachingEnabled" value="false"></property>
	</bean>
	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher"
		class="com.taiji.eap.common.shiro.helper.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="shiroEhcacheManager"></constructor-arg>
		<property name="hashAlgorithmName" value="sha-1" />
		<property name="hashIterations" value="2" />
		<property name="storedCredentialsHexEncoded" value="true" />
	</bean>

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 用户访问未对其授权的资源时，所显示的连接 -->
		<property name="unauthorizedUrl" value="/system/login/login" />
		<!-- 身份认证失败，则跳转到登录页面的配置 -->
		<property name="loginUrl" value="/system/login/login" />
		<!-- 登陆成功后要跳转的连接 -->
		<property name="successUrl" value="/system/home/home" />
		<property name="filters">
			<map>
				<entry key="system" value-ref="systemFilter" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/resources/**=anon<!-- 静态资源 -->
				/system/login/login/**=anon

				/system/home/home/**=system
			</value>
		</property>
	</bean>

	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>
	<bean id="ehCacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml"></property>
	</bean>
	<!-- 在方法中 注入 securityManager ，进行代理控制 -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
		<!-- 启用shrio授权注解拦截方式 -->
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	<!-- 异常拦截器 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">
					/system/login/login
				</prop>
			</props>
		</property>
	</bean>
</beans>