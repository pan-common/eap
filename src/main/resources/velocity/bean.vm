#parse("velocity/common.vm" )
#if(${param.aliasUse}=="1")
#set ($packageName = ${param.packageName}+"."+${param.alias}+".bean")
#else
#set ($packageName = ${param.packageName}+".bean")
#end

package ${packageName};

import java.util.Date;
import org.springframework.format.annotation.DateTimeFormat;
import com.fasterxml.jackson.annotation.JsonFormat;
#if(${param.isTree}=="01")
import com.taiji.eap.common.generator.bean.LayuiTree;
#else
import com.taiji.eap.common.base.BaseModel;
#end
#if(${param.isTree}=="01")
    #set($extendClass="LayuiTree")
#else
    #set($extendClass="BaseModel")
#end
public class #toUpperCase(${param.alias}) extends ${extendClass}{
## 生成属性
#foreach($column in $columns)
#if(${column.dataType}=="datetime")
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss",timezone="GMT+8")  //取日期时使用
    @DateTimeFormat(pattern = "yyyy-MM-dd")//存日期时使用
#end
    private #toFieldType(${column.dataType}) #camel(${column.columnName});//${column.columnComment}
#end
## 生成无参构造方法和包含id name的构造方法
#if(${param.isTree}=="01")
    public #toUpperCase(${param.alias})(#getPkFieldType($columns) #getPkProperty($columns),String ${param.nameField}) {
        this.#getPkProperty($columns) = #getPkProperty($columns);
        this.#camel(${param.nameField}) = #camel(${param.nameField});
    }

    public #toUpperCase(${param.alias})() {

    }
#end
## 生成get set方法
#foreach($column in $columns)

    public #toFieldType(${column.dataType}) get#camelToUpperCase(${column.columnName})() {
        return #camel(${column.columnName});
    }

    public void set#camelToUpperCase(${column.columnName})(#toFieldType(${column.dataType}) #camel(${column.columnName})) {
        this.#camel(${column.columnName}) = #camel(${column.columnName});
    }

#end

}
