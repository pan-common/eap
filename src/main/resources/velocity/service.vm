#parse("velocity/common.vm" )
#set ($servicePackage = "#getServicePackage(${param.packageName}${param.alias}${param.aliasUse})")
#set ($beanPackage = "#getBeanPackage(${param.packageName}${param.alias}${param.aliasUse})")
package ${servicePackage};

import com.github.pagehelper.PageInfo;
import org.apache.ibatis.annotations.Param;
import ${beanPackage}.#toUpperCase(${param.alias});
import java.util.List;

public interface #toUpperCase(${param.alias})Service{
     /**
     * 通过主键删除数据
     * @param primaryKey
     * @return
     */
    int deleteByPrimaryKey(#getPkFieldType($columns) primaryKey) throws Exception;
     /**
     * 插入数据
     * @param ${param.alias}
     * @return
     */
    int insert(#toUpperCase(${param.alias}) ${param.alias}) throws Exception;
     /**
     * 根据主键查询数据
     * @param primaryKey
     * @return
     */
    #toUpperCase(${param.alias}) selectByPrimaryKey(#getPkFieldType($columns) primaryKey) throws Exception;
     /**
     * 根据主键修改数据
     * @param ${param.alias}
     * @return
     */
    int updateByPrimaryKey(#toUpperCase(${param.alias}) ${param.alias}) throws Exception;
     /**
     * 无分页查询数据
     * @param searchText 搜索条件
     * @return
     */
    List<#toUpperCase(${param.alias})> list(String searchText) throws Exception;
     /**
     * 分页查询数据
     * @param pageNum 当前页数
     * @param pageSize 每页行数
     * @param searchText 搜索条件
     * @return
     * @throws Exception
     */
    PageInfo<#toUpperCase(${param.alias})> list(int pageNum, int pageSize, String searchText) throws Exception;

#if(${param.isTree}=="01")
     /**
     * 通过父节点查询数据
     * @param parentId
     * @return
     */
    List<#toUpperCase(${param.alias})> listByPid(#getParentIdFieldType($columns) ${parentField}) throws Exception;
    /**
    * 通过父节点分页查询数据
    * @param parentId
    * @param pageNum
    * @param pageSize
    * @param searchText
    * @return
    * @throws Exception
    */
    PageInfo<#toUpperCase(${param.alias})> listByPid(#getParentIdFieldType($columns) ${parentField}, int pageNum, int pageSize, String searchText) throws Exception;
    /**
    * 通过当前节点主键获取路径列表
    * @param primaryKey
    * @return
    */
    List<#toUpperCase(${param.alias})> getPath(#getPkFieldType($columns) primaryKey) throws Exception;
#end

}