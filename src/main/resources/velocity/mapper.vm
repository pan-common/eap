<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
#parse("velocity/common.vm" )
#set ($beanPackage = "#getBeanPackage(${param.packageName}${param.alias}${param.aliasUse})")
#set ($daoPackage = "#getDaoPackage(${param.packageName}${param.alias}${param.aliasUse})")
<mapper namespace="${daoPackage}.#toUpperCase(${param.alias})Dao">
    <resultMap id="BaseResultMap" type="${beanPackage}.#toUpperCase(${param.alias})">
#foreach($column in $columns)
#if(${column.columnKey}=="PRI")
        <id column="${column.columnName}" property="#camel(${column.columnName})" jdbcType="#toJdbcType(${column.dataType})"></id>
#else
        <result column="${column.columnName}" property="#camel(${column.columnName})" jdbcType="#toJdbcType(${column.dataType})" />
#end
#end
    </resultMap>
##循环生成列
#set($searchCount="1")
#set($columnName="")
#set($columnProperty="")
#set($excludePKProperty="")
#set($searchColumName="")
#foreach($column in $columns)
#if($!{velocityCount}>1||$!{velocityCount}<$!{list.size()})
#set($columnName=${columnName}+",")
#set($columnProperty=${columnProperty}+",")
#set($excludePKProperty=${excludePKProperty}+",")
#if(${column.isQuery}=="01")
#if(${searchCount}!="1")
#set($searchColumName=${searchColumName}+",',',")
#end
#set($searchCount=${searchCount}+"1")
#end
#end
#set($columnName=${columnName}+${column.columnName})
#set($columnProperty=${columnProperty}+"#{"+"#camel(${column.columnName})"+",jdbcType="+"#toJdbcType(${column.dataType})"+"}")
#set($excludePKProperty=${excludePKProperty}+${column.columnName}+"=#{"+"#camel(${column.columnName})"+",jdbcType="+"#toJdbcType(${column.dataType})"+"}")
#if(${column.isQuery}=="01")
#set($searchColumName=${searchColumName}+${column.columnName})
#end
#end

    <select id="list" resultMap="BaseResultMap">
        SELECT * FROM ${param.tableName}
        <where>
#if(${param.deleteWay}=="01")
            valid = '1'
#end
            <if test="searchText!=null and searchText!=''">
                AND CONCAT(${searchColumName}) LIKE CONCAT("%",#{searchText},"%")
            </if>
        </where>
    </select>
#if(${param.isTree}=="01")
    <select id="listByPid" resultMap="BaseResultMap">
        SELECT * FROM ${param.tableName}
        <where>
            ${param.parentField} = #{${parentField},jdbcType=#getParentIdJdbcType($columns)}
#if(${param.deleteWay}=="01")
                AND valid = '1'
#end
            <if test="searchText!=null and searchText!=''">
                AND CONCAT(${searchColumName}) LIKE CONCAT("%",#{searchText},"%")
            </if>
        </where>
    </select>
#end
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        SELECT * FROM ${param.tableName}
        WHERE #getPkColumn($columns) = #{#getPkProperty($columns),jdbcType=#getPkJdbcType($columns)}
    </select>

    <insert id="insert" parameterType="${beanPackage}.#toUpperCase(${param.alias})">
        <selectKey resultType="#getPkJavaType($columns)" keyProperty="#getPkProperty($columns)" order="AFTER">
            SELECT LAST_INSERT_ID() AS #getPkColumn($columns)

        </selectKey>
        INSERT INTO ${param.tableName}(
        ${columnName})
        VALUES(
        ${columnProperty}
        )
    </insert>

    <update id="updateByPrimaryKey" parameterType="${beanPackage}.#toUpperCase(${param.alias})">
        UPDATE ${param.tableName} SET
        ${excludePKProperty}
        WHERE #getPkColumn($columns) = #{#getPkProperty($columns),jdbcType=#getPkJdbcType($columns)}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="#getPkJavaType($columns)">
#if(${param.deleteWay}=="01")
        UPDATE ${param.tableName} SET valid = '2' WHERE #getPkColumn($columns) = #{#getPkProperty($columns),jdbcType=#getPkJdbcType($columns)}
#elseif(${param.deleteWay}=="02")
        DELETE FROM ${param.tableName} WHERE #getPkColumn($columns) = #{#getPkProperty($columns),jdbcType=#getPkJdbcType($columns)}
#end
    </delete>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT * FROM ${param.tableName}
    </select>
</mapper>